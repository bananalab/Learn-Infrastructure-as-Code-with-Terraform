{
  "swagger": "2.0",
  "info": {
    "title": "rojopolis API",
    "description": "rojopolis API",
    "version": "0.0.1"
  },
  "paths": {
    "/agency/{aId}": {
      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "meta data about a agency",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "agency object",
            "schema": {
              "type": "object",
              "properties": {
                "aId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "rojopolisEncounterScore": {
                  "type": "integer"
                },
                "rojopolisGeneralScore": {
                  "type": "integer"
                },
                "popluation": {
                  "type": "integer"
                },
                "cityAgePercent": {
                  "description": "age percentages for the agency corresponding to the age scale (see scales.json 12)",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "cityRacePercent": {
                  "description": "race percentages for the agency corresponding to the age scale (see scales.json 6)",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "cityGenderPercent": {
                  "description": "gender percentages for the agency corresponding to the age scale (see scales.json 7)",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/agency.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/questionChoices/{aId}": {
      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Possible choices for questions",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Upper bound on number of items returned",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "exclusiveStartKey",
            "description": "Item from which to start query",
            "type": "map"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "choices object",
            "schema": {
              "type": "object",
              "properties": {
                "qcid": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/agency.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/questionResponsesMetadata/{aId}": {
      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of police department"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "This endpoint returns an array containing the count of responses for each scale item.",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Upper bound on number of items returned",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "exclusiveStartKey",
            "description": "Item from which to start query",
            "type": "map"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "earliest date in Unix time, default to 30 days prior",
            "type": "integer",
            "default": "now - 60 * 60 * 24 * 30"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "latest date in Unix time, default to now",
            "type": "integer",
            "default": "now"
          },
          {
            "in": "query",
            "name": "age",
            "description": "age ranges to include (see scales.json 12)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "genders to include (see scales.json 7)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "race",
            "description": "races to include (see scales.json 6)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "sentiment",
            "description": "sentiments to include (see scales.json 8)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "origin",
            "description": "origins to include (see scales.json 9)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "question",
            "description": "only responses to this questionId",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "topic",
            "description": "filter repsonses for topic",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "response object",
            "schema": {
              "$ref": "#/definitions/QuestionResponsesMeta"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/questionResponsesMetadata.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/questions/{aId}": {

      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of police department"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "all the questions that are associated with this agency",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Upper bound on number of items returned",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "exclusiveStartKey",
            "description": "Item from which to start query",
            "type": "map"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "array of questions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Question"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/questions.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/responsesSentimentMetadata/{aId}": {

      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of police department"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "all the responsesSentimentMetadata that are associated with this agency",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Upper bound on number of items returned",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "exclusiveStartKey",
            "description": "Item from which to start query",
            "type": "map"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "array of questions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Question"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/questions.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/topics/{aId}": {

      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of police department"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "popular topics. TBD - figure out how to get topic counts for a given set of responses ie. \"Homelessness mentioned 45 times\"",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "array of topics",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Topic"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/topics.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/responses/{aId}": {

      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of police department"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "this endpoint returns a paginated subset of individual responses.",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Upper bound on number of items returned",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "exclusiveStartKey",
            "description": "Item from which to start query",
            "type": "map"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "earliest date in Unix time, default to 30 days prior",
            "type": "integer",
            "default": "now - 60 * 60 * 24 * 30"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "latest date in Unix time, default to now",
            "type": "integer",
            "default": "now"
          },
          {
            "in": "query",
            "name": "age",
            "description": "age ranges to include (see scales.json 12)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "genders to include (see scales.json 7)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "race",
            "description": "races to include (see scales.json 6)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "sentiment",
            "description": "sentiments to include (see scales.json 8)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "origin",
            "description": "origins to include (see scales.json 9)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "geo",
            "description": "geo graphic bounding box corresponding to [bottom left coordinates, upper right coordinates]",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "topic",
            "description": "filter repsonses for topic",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "used for pagination",
            "type": "integer",
            "default": 0
          },
          {
            "in": "query",
            "name": "limit",
            "description": "how many responses to send",
            "type": "integer",
            "default": 100
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "response object",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer"
                },
                "offset": {
                  "type": "integer"
                },
                "responses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Response"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/responses.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/responsesMetadata/{aId}": {

      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CORS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of police department"
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "summary": "this endpoint returns aggregated data for all the responses in the query.",
        "parameters": [
          {
            "in": "path",
            "name": "aId",
            "type": "integer",
            "required": true,
            "description": "Id of agency"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "earliest date in Unix time, default to 30 days prior",
            "type": "integer",
            "default": "now - 60 * 60 * 24 * 30"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "latest date in Unix time, default to now",
            "type": "integer",
            "default": "now"
          },
          {
            "in": "query",
            "name": "age",
            "description": "age ranges to include (see scales.json 12)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "genders to include (see scales.json 7)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "race",
            "description": "races to include (see scales.json 6)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "sentiment",
            "description": "sentiments to include (see scales.json 8)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "origin",
            "description": "origins to include (see scales.json 9)",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": "all"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "filter repsonses for topic",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "response object",
            "schema": {
              "$ref": "#/definitions/ResponsesMeta"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "rojopolis-authorizer": [
              "${rojopolis_user_pool_resource_server_identifier}/topics.read"
            ]
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "${crud_handler_lambda_qualified_arn}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    }
  },
  "securityDefinitions": {
    "rojopolis-authorizer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-amazon-apigateway-authtype": "cognito_user_pools",
      "x-amazon-apigateway-authorizer": {
        "providerARNs": [
          "${rojopolis_user_pool_arn}"
        ],
        "type": "cognito_user_pools"
      }
    }
  },
  "definitions": {
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "text": {
          "type": "string",
          "description": "question text"
        },
        "scaleId": {
          "type": "integer",
          "description": "the scale used for this question (see scales.json)"
        },
        "category": {
          "type": "integer",
          "description": "question category (see scales.json 0)"
        },
        "origin": {
          "type": "integer",
          "description": "derived from parent survey (see scales.json 9)"
        }
      }
    },
    "Topic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "text": {
          "type": "string",
          "description": "human readable topic"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "integer",
          "description": "question this response belongs to"
        },
        "scale": {
          "type": "integer",
          "description": "scale value"
        },
        "sentiment": {
          "type": "integer",
          "description": "sentiment value (see scales.json 8)"
        },
        "text": {
          "type": "string",
          "description": "raw response text"
        },
        "race": {
          "type": "integer",
          "description": "race of respondent (see scales.json 6)"
        },
        "age": {
          "type": "integer",
          "description": "age of respondent"
        },
        "gender": {
          "type": "integer",
          "description": "gender of respondent (see scales.json 7)"
        },
        "lat": {
          "type": "number",
          "description": "latitude"
        },
        "lon": {
          "type": "number",
          "description": "longitude"
        },
        "rojopolisEncounterScore": {
          "type": "number",
          "format": "float",
          "description": "rojopolis encounter score"
        },
        "rojopolisGeneralScore": {
          "type": "number",
          "format": "float",
          "description": "rojopolis general score"
        }
      }
    },
    "ResponsesMeta": {
      "description": "aggregated data for a set of responses. we return a CountAvg object",
      "type": "object",
      "properties": {
        "all": {
          "description": "info for all results. an array of one item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountAvg"
          }
        },
        "age": {
          "description": "age info for this set of responses corresponding to the age scale (see scales.json 12)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountAvg"
          }
        },
        "race": {
          "description": "race info for this set of responses corresponding to the age scale (see scales.json 6)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountAvg"
          }
        },
        "gender": {
          "description": "gender info for the this set of resopnses corresponding to the age scale (see scales.json 7)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountAvg"
          }
        },
        "dayCount": {
          "description": "responses info by day",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountAvg"
          }
        }
      }
    },
    "QuestionResponsesMeta": {
      "description": "aggregated data for a set of responses. We return a ScaleCount object",
      "type": "object",
      "properties": {
        "all": {
          "description": "info for all responses. an array of one item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleCount"
          }
        },
        "age": {
          "description": "age info for this set of responses corresponding to the age scale (see scales.json 12)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleCount"
          }
        },
        "race": {
          "description": "race info for this set of responses corresponding to the age scale (see scales.json 6)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleCount"
          }
        },
        "gender": {
          "description": "gender info for the this set of resopnses corresponding to the age scale (see scales.json 7)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleCount"
          }
        },
        "dayCount": {
          "description": "responses info by day",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleCount"
          }
        }
      }
    },
    "CountAvg": {
      "description": "used on the 'At A Glance' pages",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count of items"
        },
        "rojopolisEncounterScoreAvg": {
          "type": "number",
          "format": "float",
          "description": "rojopolis encounter score average of items"
        },
        "rojopolisGeneralScoreAvg": {
          "type": "number",
          "format": "float",
          "description": "rojopolis general score average of items"
        }
      }
    },
    "ScaleCount": {
      "description": "used on the \"Qualitative Data\" pages, an array containing the count of responses for each scale item. for example, for scale 1 the array would contain 4 items, how many responses were strongly disagree, how many were disagree...",
      "type": "array",
      "items": {
        "type": "integer"
      }
    }
  }
}
